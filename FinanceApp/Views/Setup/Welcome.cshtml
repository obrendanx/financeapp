@model FinanceApp.Models.Payments;
@using System.Security.Claims;
@using Microsoft.AspNetCore.Mvc;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var userEmail = User.FindFirstValue(ClaimTypes.Email);
    List<Payments> payments = ViewBag.Payments;
}

<script>
    function showPaymentSetup(divId) {
        var div = document.getElementById(divId);
        if (div.style.display === "block") {
            div.style.display = "none";
        } else {
            div.style.display = "block";
        }
    }

    function closePayment(divId) {
        var div = document.getElementById(divId);
        div.style.display = "none";
    }
    
    function showPaySetup(divId) {
        var div = document.getElementById(divId);
        
        if (div.style.display === "block") {
           div.style.display = "none";
        } else {
           div.style.display = "block";
        }
    }
    
    function closePay(divId) {
        var div = document.getElementById(divId);
        div.style.display = "none";
    }
        
    function showFundsSetup(divId) {
         var div = document.getElementById(divId);
         
         if (div.style.display === "block") {
             div.style.display = "none";
         } else {
             div.style.display = "block";
         }
    }
        
    function closeFunds(divId) {
         var div = document.getElementById(divId);
         div.style.display = "none";
    }
</script>

<h1>Welcome Back!</h1>
@if (ViewBag.Balance != null)
{
    <p>Account Balance: @ViewBag.Balance</p>
}

<div>
    <button onclick="showPaymentSetup('paymentSetup')" class="btn btn-primary mb-1">Add Monthly Payment</button>
    <button onclick="showPaySetup('addPayment')" class="btn btn-primary mb-1">Add Payment</button>
    <button onclick="showFundsSetup('addFunds')" class="btn btn-primary">Add Funds</button>

    <div class="payment-setup" id="paymentSetup" style="display:none">
        <button onclick="closePayment('paymentSetup')" class="btn btn-secondary mt-2 close-btn">Close</button>
        <h2>Add a payment</h2>
        <form asp-action="Welcome" asp-controller="Setup" method="post">
            <label for="payment-name">Payment Name</label>
            <input type="text" asp-for="PaymentName" class="form-control" />
            <label for="payment-total">Payment Total</label>
            <input type="text" asp-for="PaymentTotal" class="form-control" />
            <label for="payment-date">Payment Date</label>
            <input type="date" asp-for="PaymentDate" class="form-control" />
            <label for="payment-freq">Payment Frequency</label>
            <select asp-for="PaymentFreq" class="form-control">
                <option>Daily</option>
                <option>Weekly</option>
                <option>Monthly</option>
                <option>Yearly</option>
                <option>One Time Payment</option>
            </select>
            <input type="hidden" asp-for="Email" value="@userEmail" />
            <button type="submit" class="submitBtn">Submit</button>
        </form>
    </div>
    
    <div class="payment" id="addPayment" style="display:none">
        <button onclick="closePay('addPayment')" class="btn btn-secondary mt-2 close-btn">Close</button>
        <h2>Add a single payment</h2>
        <form asp-action="AddPayment" asp-controller="Setup" method="post">
            <label>Payment Total</label>
            <input type="text" name="PaymentAmount" class="form-control" />
            <input type="hidden" name="Email" value="@userEmail" />
            <button type="submit" class="submitBtn">Add Payment</button>
        </form>
    </div>
    
    <div class="payment" id="addFunds" style="display:none">
            <button onclick="closeFunds('addFunds')" class="btn btn-secondary mt-2 close-btn">Close</button>
            <h2>Add some funds</h2>
            <form asp-action="AddFunds" asp-controller="Setup" method="post">
                <label>Payment Total</label>
                <input type="text" name="PaymentAmount" class="form-control" />
                <input type="hidden" name="Email" value="@userEmail" />
                <button type="submit" class="submitBtn">Add Funds</button>
            </form>
        </div>
</div>

<div class="payment-setup" id="showPayment" style="display:none">
    <button onclick="closeEditPayment('showPayment')" class="btn btn-secondary mt-2 close-btn">Close</button>

    <h2>Payment Name: <span id="paymentName"></span></h2>
    <h2>Payment Date: <span id="paymentDate"></span></h2>
    <h2>Payment Frequency: <span id="paymentFreq"></span></h2>
</div>

<div id="calendar"></div>

<script>
    var events = [];

    function incrementMonth(dateString) {
        var year = parseInt(dateString.substring(0, 4));
        var month = parseInt(dateString.substring(5, 7));

        month++;

        if (month > 12) {
            month = 1;
            year++;
        }

        var newMonth = month < 10 ? '0' + month : month;
        var newDateString = year + '-' + newMonth + dateString.substring(7);
        return newDateString;
    }

    function incrementWeek(dateString) {
        var parts = dateString.split('-');
        var year = parseInt(parts[0]);
        var month = parseInt(parts[1]) - 1; 
        var day = parseInt(parts[2]);

        var startDate = new Date(year, month, day);
        startDate.setDate(startDate.getDate() + 7); 

        var newYear = startDate.getFullYear();
        var newMonth = startDate.getMonth() + 1; 
        var newDay = startDate.getDate();

        newMonth = newMonth < 10 ? '0' + newMonth : newMonth;
        newDay = newDay < 10 ? '0' + newDay : newDay;

        var newDateString = newYear + '-' + newMonth + '-' + newDay;
        return newDateString;
    }

    function incrementYear(dateString) {
        var parts = dateString.split('-');
        var year = parseInt(parts[0]) + 1; 
        var month = parseInt(parts[1]);
        var day = parseInt(parts[2]);

        var newMonth = month < 10 ? '0' + month : month;
        var newDay = day < 10 ? '0' + day : day;

        var newDateString = year + '-' + newMonth + '-' + newDay;
        return newDateString;
    }

    function generateEvents(paymentDate, paymentTitle, paymentFreq, paymentId) {
        var startDate = paymentDate;

        if (paymentFreq === "Monthly") {
            for (var i = 0; i < 24; i++) {
                events.push({
                    title: paymentTitle,
                    start: startDate,
                    freq: paymentFreq,
                    paymentid: paymentId,
                    allDay: true 
                });

                startDate = incrementMonth(startDate);
            }
        } else if (paymentFreq === "Daily") {
            events.push({
                title: paymentTitle,
                start: paymentDate,
                startRecur: paymentDate,
                endRecur: "2099-01-01"
            });
        } else if (paymentFreq === "Weekly") {
            for (var i = 0; i < 150; i++) {
                events.push({
                    title: paymentTitle,
                    start: startDate,
                    freq: paymentFreq,
                    paymentid: paymentId,
                    allDay: true 
                });

                startDate = incrementWeek(startDate);
            }
        } else if (paymentFreq === "Yearly") {
            for (var i = 0; i < 15; i++) {
                events.push({
                    title: paymentTitle,
                    start: startDate,
                    freq: paymentFreq,
                    paymentid: paymentId,
                    allDay: true 
                });

                startDate = incrementYear(startDate);
            }
        } else {
            events.push({
                title: paymentTitle,
                start: paymentDate,
                freq: paymentFreq,
                paymentid: paymentId,
            })
        }
    }

    @foreach (var payment in ViewBag.Payments)
    {
        <text>
            generateEvents("@payment.PaymentDate", "@payment.PaymentName", "@payment.PaymentFreq", "@payment.PaymentId");
        </text>
    }

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: events,
                eventClick: function (info) {
                    showPayment(info.event.start, info.event.title, info.event.freq, info.event.paymentid);
                    console.log(info.event.start, info.event.title, info.event.freq, info.event.paymentid);
                }
            });
            calendar.render();
        });

    function showPayment(paymentDate, paymentName, paymentFreq, paymentId) {
        console.log(paymentDate, paymentName, paymentFreq);
        var div = document.getElementById("showPayment");
        var name = document.getElementById("paymentName");
        var paymentDate = document.getElementById("paymentDate");
        var paymentFreq = document.getElementById("paymentFreq");

        if (div.style.display === "block") {
            div.style.display = "none";
        } else {
            div.style.display = "block";
            name.value = paymentName;
        }
    }

    function closeEditPayment(divId) {
        var div = document.getElementById(divId);
        div.style.display = "none";
    }

</script>

